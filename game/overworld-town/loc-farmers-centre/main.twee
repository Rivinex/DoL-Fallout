:: Farmers Centre
<<set $outside to 0>><<set $location to "town">><<effects>>
<<if $farmersProduce is undefined>>
	<<set $farmersProduce to {
		selling:{},
		toSell:{},
		money:0,
		sold:0,
		totalSold:0,
	}>>
<</if>>

<<if $farmersProduce.money gt 10000>>
	<<link [[Collect Money|Farmers Centre Money Collection]]>><</link>>
	<br>
<</if>>
<<link [[Inquire about Selling Produce|Farmers Centre Produce Sale]]>><</link>>
<br><br>
<<link [[Leave|Harvest Street]]>><<endevent>><</link>>


:: Farmers Centre Money Collection

<<moneyGain `(parseFloat($farmersProduce.money / 100).toFixed(2))`>>
<<set $farmersProduce.money to 0>>
<br><br>
<<link [[Leave|Farmers Centre]]>><</link>>

:: Farmers Centre Produce Sale
<<set $farmersProduce.toSell to {}>>
<<set _plant_keys to Object.keys($plants)>>
<<set _plantItems to {}>>
<<for _i to 0; _i lt _plant_keys.length; _i++>>
	<<if ["produce","vegetable","fruit","shroom"].includes(setup.plants[_plant_keys[_i]].type)>>
		<<set _plantItems[_plant_keys[_i]] to clone($plants[_plant_keys[_i]])>>
	<</if>>
<</for>>
<div id="produceDisplay">
	<<produceDisplay>>
</div>
<br>
<<link [[Leave|Farmers Centre]]>><<set $farmersProduce.toSell to {}>><</link>>

:: Farmers Centre Produce Sale Confirm

Items added. Something about them sending a lorry to the farm shortly.
<br><br>
<<link [[Leave|Farmers Centre]]>><</link>>


:: Farmers Centre Widgets [widget]
<<widget "produceDisplay">>

<<set _listMaxItems to 10>>
<<set _keys to (Object.keys(_plantItems) gt Object.keys($farmersProduce.toSell) ? Object.keys(_plantItems) : Object.keys($farmersProduce.toSell))>>
<<if _listPage is undefined>>
	<<set _listPage to 1>>
<</if>>
<<set _listPageMax to Math.ceil(_keys.length / _listMaxItems)>>
<<set _indexStart to ((_listPage - 1) * _listMaxItems)>>
<<set _indexEnd to (_indexStart + _listMaxItems gt _keys.length ? _keys.length : _indexStart + _listMaxItems)>>

<<for _i to _indexStart; _i lt _indexEnd; _i++>>
	<<if !["produce","vegetable","fruit","shroom"].includes(setup.plants[_plant_keys[_i]].type)>>
		<<continue>>
	<</if>>
	<<set _item to _plant_keys[_i]>>
	<div @id="'produceItem-'+_item" class="produceItem">
		<<produceDisplayItem _item>>
	</div>
<</for>>
<div id="produceDisplayControls">
	<<set _disabled = _listPage > 1 ? "" : "disabled">>
	<div @class="'div-link btn-pagination prev ' + _disabled">
		<<link "Previous">>
			<<if _listPage > 1>>
				<<set _listPage -= 1>>
				<<replace #produceDisplay>><<produceDisplay>><</replace>>
			<</if>>
		<</link>>
		<div class="btn-pagination-arrow">&lt;</div>
	</div>
	<div>
		<<print (_listPage) + " out of " + _listPageMax>>
	</div>
	<<set _disabled = _listPage < _listPageMax ? "" : "disabled">>
	<div @class="'div-link btn-pagination next ' + _disabled">
		<<link "Next">>
			<<if _listPage < _listPageMax>>
				<<set _listPage += 1>>
				<<replace #produceDisplay>><<produceDisplay>><</replace>>
			<</if>>
		<</link>>
		<div class="btn-pagination-arrow">&gt;</div>
	</div>
</div>
<<run linkifyDivs('#produceDisplayControls')>>

<<produceDisplayConfirm>>
<</widget>>

<<widget "produceDisplayConfirm">>
<div id="produceConfirm">
	<<set $_total to 0>>
	<<for _label, _value range $farmersProduce.toSell>>
		<<if _value gt 0>>
			<<set $_total += bulkProduceValue(SugarCube.setup.plants[_label],_value)>>
		<</if>>
	<</for>>
	Total: <<printmoney $_total>>
	<br>
	<<if $_total gt 0>>
		<<link [[Sell Produce|Farmers Centre Produce Sale Confirm]]>>
			<<for _label, _value range $farmersProduce.toSell>>
				<<if _value gt 0>>
					<<if $farmersProduce.selling[_label] is undefined>>
						<<set $farmersProduce.selling[_label] to _value>>
					<<else>>
						<<set $farmersProduce.selling[_label] += _value>>
					<</if>>
					<<set $plants[_label].amount -= _value>>
				<</if>>
			<</for>>
			<<set $farmersProduce.toSell to {}>>
		<</link>>
	<<else>>
		You still need to add items to the request.
	<</if>>
</div>
<</widget>>

<<widget "produceDisplayItem">>
<<if $args[0]>>
	<<set _item to $args[0]>>
	<<capture _item>>
		<div>
			<<if $farmersProduce.toSell[_item] is undefined>>
				<<set $farmersProduce.toSell[_item] to 0>>
			<</if>>
			<<if $plants[_item] is undefined>>
				You dont have any <<print $plants[_item].plural>> right now.
			<<elseif $plants[_item].amount lt 250>>
				You dont have enough of <<print $plants[_item].plural>> right now to sell.
			<<else>>
				<<set _max to $plants[_item].amount - ($plants[_item].amount % 250)>>
				<<set _base to bulkProduceValue(setup.plants[_item])>>
				<<print $plants[_item].plural.toUpperFirst()>> - Sold for <<printmoney _base>> per bulk of 250.
				<<numberslider `"$farmersProduce.toSell['"+_item+"']"` $farmersProduce.toSell[_item] 0 `_max` 250>>
				<<run $(() => {
					$('#numberslider-input-farmersproducetosell'+_item).on('input change', e => {
						let valSpan = $(e.currentTarget).siblings().first();
						let item = e.currentTarget.id.split("producetosell")[1];
						let value = valSpan.text();
						valSpan.text((i, value) => value + " - Â£" + (bulkProduceValue(SugarCube.setup.plants[item],value) / 100).toFixed(2));
						$('#produceConfirm').replaceWith(new Wikifier(null, '<<produceDisplayConfirm>>').output)
					})
				})>>
			<</if>>
		</div>
		<<if $farmersProduce.selling[_item]>>
			<div>
				They are still selling <<print $farmersProduce.selling[_item]>> <<print $plants[_item].plural>>.
			</div>
		<</if>>
	<</capture>>
<</if>>
<</widget>>

<<widget "dailySellProduce">>
<<if $farmersProduce is undefined>>
<<elseif Object.keys($farmersProduce.selling).length gt 0>>
	<<set _baseSaleQuantity to 250>>
	<<if between($famebusiness, 1900, 2000)>>
		<<set _baseSaleQuantity to _baseSaleQuantity * 6>>
	<<elseif between($famebusiness, 1000, 1900)>>
		<<set _baseSaleQuantity to _baseSaleQuantity * 5>>
	<<elseif between($famebusiness, 1000, 1500)>>
		<<set _baseSaleQuantity to _baseSaleQuantity * 4>>
	<<elseif between($famebusiness, 500, 1000)>>
		<<set _baseSaleQuantity to _baseSaleQuantity * 3>>
	<<elseif between($famebusiness, 200, 500)>>
		<<set _baseSaleQuantity to _baseSaleQuantity * 2>>
	<</if>>
	<<set _itemsSold to 0>>
	<<for _label, _value range $farmersProduce.selling>>
		<<set _quantity to clone(_baseSaleQuantity)>>
		<<if !setup.plants[_label].season.includes($season)>>
			<<set _quantity to Math.floor(_quantity * 0.9)>>
		<</if>>
		<<set _rng to 800 + Math.floor($tending / 5)>>
		<<set _quantity to Math.floor(_quantity * (random(_rng,_rng + 400)/1000))>>
		<<if _value lt _quantity>>
			<<set _quantity to _value>>
		<</if>>
		<<set $farmersProduce.sold += _quantity>>
		<<set $farmersProduce.totalSold += _quantity>>
		
		<<set $farmersProduce.money += bulkProduceValue(setup.plants[_label],_quantity)>>
		<<set $farmersProduce.selling[_label] -= _quantity>>

		<<if $farmersProduce.selling[_label] lte 0>>
			<<run delete $farmersProduce.selling[_label]>>
		<</if>>
	<</for>>
	<<if $farmersProduce.sold gt 5000>>
		<<set _famebusinessSold to $farmersProduce.sold - ($farmersProduce.sold % 5000)>>
		<<set $farmersProduce.sold - _famebusinessSold>>
		<<famebusiness `Math.floor(_famebusinessSold / 5000)`>>
	<</if>>
<</if>>
<</widget>>